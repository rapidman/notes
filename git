1) Create a branch with the tag
	git branch {tagname}-branch {tagname}
	git checkout {tagname}-branch

2) Include the fix manually if it's just a change .... 
	git add .
	git ci -m "Fix included"
    or cherry-pick the commit, whatever is easier
	git cherry-pick  {num_commit}
	
3) Delete and recreate the tag locally
	git tag -d {tagname}
	git tag {tagname}

4) Delete and recreate the tag remotely
	git push origin :{tagname} // deletes original remote tag
	git push origin {tagname} // creates new remote tag

This is based on https://gist.github.com/739288 thanks to nickfloyd for it


//force pull
git fetch origin master
git reset --hard FETCH_HEAD
git clean -df

//drop latest commit
git reset --hard HEAD~1
git push origin HEAD --force

//sync local repo with remote one
git fetch --prune

//git rebase
https://about.gitlab.com/2018/06/07/keeping-git-commit-history-clean/
